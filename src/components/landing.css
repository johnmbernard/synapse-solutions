/* Basic one-page layout with a GIF background */
/* Put your GIF at public/background.gif (or change the url below) */
:root {
  --nav-height: 64px;
  --accent: #0b5fff;
}

html {
  scroll-behavior: smooth;
  box-sizing: border-box;
}

*,
*::before,
*::after { box-sizing: inherit; }

.landing {
  min-height: 100vh;
  position: relative;
  color: #fff;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

/* dark overlay for readability */
.landing::before {
  content: "";
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,0.5);
  pointer-events: none;
  z-index: 0;
}

.nav {
  position: sticky;
  top: 0;
  height: var(--nav-height);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0 1.25rem;
  z-index: 10;
  background: linear-gradient(to bottom, rgba(0,0,0,0.45), rgba(0,0,0,0.15));
  backdrop-filter: blur(4px);
}

.nav-logo { height: 40px; }

.nav-links {
  display: flex;
  gap: 0.5rem;
  list-style: none;
  margin: 0;
  padding: 0;
  align-items: center;
}

.nav-links li button {
  background: transparent;
  border: none;
  color: #ddd;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  font-size: 0.95rem;
}

.nav-links li.active button {
  color: #fff;
  border-bottom: 2px solid var(--accent);
}

/* sections */
.section {
  min-height: calc(100vh - var(--nav-height));
  padding: 5rem 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 1; /* above overlay */
  text-align: center;
}

.section.alt {
  background: rgba(255,255,255,0.04);
  backdrop-filter: blur(2px);
}

.hero {
  /* half of the viewport minus the nav height */
  min-height: calc((100vh - var(--nav-height)) / 2);
  padding: 2.5rem 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hero-inner { max-width: 900px; }

.hero h1 {
  font-size: 2.25rem;
  margin: 0 0 0.5rem 0;
  color: #fff;
}

.hero p { color: #e9eefc; margin: 0 0 1rem 0; }

.container h2 {
  font-size: 1.75rem;
  margin-bottom: 0.5rem;
  color: #fff;
}

.container p { color: #dbe6ff; margin: 0 0 1rem 0; }

.cta { display: flex; gap: 1rem; justify-content: center; margin-top: 1rem; }
.btn {
  padding: 0.6rem 1rem;
  border-radius: 6px;
  border: 1px solid transparent;
  cursor: pointer;
}
.btn.primary { background: var(--accent); color: white; }
.btn.outline { background: transparent; color: var(--accent); border: 1px solid var(--accent); }

.footer {
  padding: 1.25rem;
  text-align: center;
  color: #cfd8ff;
  z-index: 1;
  position: relative;
}

/* small screens */
@media (max-width: 640px) {
  .nav { padding: 0 0.75rem; }
  .nav-logo { height: 34px; }
  .hero h1 { font-size: 1.6rem; }
  .section { padding: 4rem 1rem; }
}

  .section.hero {
    min-height: calc((100vh - var(--nav-height)) * 0.5);
    padding: 1.5rem 1rem;
  }

/* ...existing code... */

/* cards container just under the hero */

.section-cards {
  padding: 1.5rem clamp(1rem, 6vw, 3rem);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
  min-height: calc((100vh - var(--nav-height)) / 2);
}

/* keep responsive breakpoint if you previously used one */
@media (max-width: 880px) {
  .cards-wrap {
    /* still stacked on small screens */
    grid-template-columns: none;
    display: flex;
    flex-direction: column;
  }
}

/* card basics */
.card {
  background: rgba(255,255,255,0.04);
  border-radius: 14px; /* rounded like a card */
  padding: 1.25rem;
  box-shadow: 0 12px 30px rgba(0,0,0,0.55);
  border: 1px solid var(--card-border, rgba(255,255,255,0.03));
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  cursor: pointer;
  overflow: hidden;
  transition: transform 240ms cubic-bezier(.2,.9,.2,1), box-shadow 240ms, background 240ms;
  position: relative;

  /* explicit height so two cards + gap = container height, making spacing predictable */
  flex: none;
  height: calc((100% - 1.25rem) / 2);
  min-height: 300px;
}

/* header area always visible */
.card-head h3 {
  margin: 0 0 0.25rem 0;
  font-size: 1.25rem;
  color: #fff;
}


/* hidden/expandable content */
.card-content {
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: max-height 320ms ease, opacity 260ms ease, padding 260ms ease;
  padding-top: 0;
  display: flex;
  flex-direction: column;
}

/* when hovered or explicitly expanded reveal the content */
.card:hover,
.card:focus-within,
.card.expanded {
  transform: translateY(-6px) scale(1.02);
  box-shadow: 0 24px 44px rgba(0,0,0,0.6);
  background: rgba(255,255,255,0.06);
}

/* reveal content (using large max-height to allow flexible content) */
.card:hover .card-content,
.card:focus-within .card-content,
.card.expanded .card-content {
  max-height: 420px;
  opacity: 1;
  padding-top: 0.75rem;
}

/* card content list and actions */
.card-content ul {
  margin: 0 0 0.75rem 1rem;
  color: #e6eefc;
}
.card-actions { display: flex; gap: 0.5rem; }

/* avoid hover-only behaviour on very small screens - expanded class is used via click */
@media (max-width: 640px) {
  .card:hover { transform: none; box-shadow: 0 8px 18px rgba(0,0,0,0.5); }
  .card { min-height: 140px; }
}

/* ...existing code... */